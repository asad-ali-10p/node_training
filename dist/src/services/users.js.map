{"version":3,"file":"users.js","sourceRoot":"","sources":["../../../src/services/users.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6CAA0C;AAC1C,2BAA0B;AAC1B,8CAA8C;AAGjC,QAAA,MAAM,GAAG,GAAS,EAAE;IAC7B,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;AACzB,CAAC,CAAA,CAAA;AAEY,QAAA,OAAO,GAAG,CAAO,IAAkB,EAAE,EAAE;IAChD,MAAM,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;QACrB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC7B,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC9B,aAAa,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KACzC,CAAC,CAAA;IAEF,MAAM,UAAU,GAAG,IAAI,aAAK,EAAE,CAAC;IAC/B,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC5B,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC9B,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACjC,CAAC,CAAA,CAAA;AAEY,QAAA,SAAS,GAAG,CAAO,IAAkB,EAAE,EAAE;IAClD,MAAM,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;QACrB,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC9B,aAAa,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KACzC,EAAE,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC,CAAA;IAEzB,MAAM,UAAU,GAAG,IAAI,aAAK,EAAE,CAAC;IAC/B,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC9B,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IAC9C,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACrC,CAAC,CAAA,CAAA","sourcesContent":["import { Users } from \"../entities/users\";\nimport * as joi from 'joi'\nimport * as repo from '../repositories/users';\nimport { IUserRequest } from '../interfaces/user';\n\nexport const getAll = async () => {\n    return repo.getAll();\n} \n\nexport const addUser = async (hero: IUserRequest) => {\n    await joi.validate(hero, {\n        name: joi.string().required(),\n        email: joi.string().required(),\n        password_hash: joi.string().required(),\n    })\n    \n    const toSaveUser = new Users();\n    toSaveUser.name = hero.name;\n    toSaveUser.email = hero.email;\n    toSaveUser.password_hash = hero.password_hash;\n    return repo.save(toSaveUser);\n}\n\nexport const loginUser = async (hero: IUserRequest) => {\n    await joi.validate(hero, {\n        email: joi.string().required(),\n        password_hash: joi.string().required(),\n    }, { allowUnknown: true})\n\n    const toSaveUser = new Users();\n    toSaveUser.email = hero.email;\n    toSaveUser.password_hash = hero.password_hash;\n    return repo.loginUer(toSaveUser);\n}"]}